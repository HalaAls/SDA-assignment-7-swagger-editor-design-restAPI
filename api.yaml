openapi: 3.0.3

info:
  version: 1.0.0
  title: E-commerce API
  description: API for E-commerce App
  contact:
    email: alsuwait.ha@gmail.com

servers: 
  - url: http://localhost:3001

components:
  schemas:
    Product:
      type: object
      required:
        - title
        - price
        - category
        
      properties:
        id:
          type: string
          description: the id will be auto generated in the backend
        title:
          type: string
          description: the title of the product
        price:
          type: number
          description: the price of the product
        description:
          type: string
          description: the description of the product
        category:
          type: string
          description: the category of the product
        image:
          type: string
          description: the url of the product image
        rating:
          type: object
          properties:
            rate:
              type: number
            count:
              type: number
      example:
        id: 1
        title: Surface Pro 9
        price: 1500
        description: 2 in 1 tablet
        category: tablet
        image: https://cdn-dynmedia-1.microsoft.com/is/image/microsoftcorp/MSFT-Surface-Pro-9-for-Business-mobile-Poster-RE50MGf?scl=1
        rating:
          rate: 4.2
          count: 189
          
    User:
      type: object
      required:
        - name
        - email
        - password
        
      properties:
        id:
          type: string
          description: the id will be auto generated in the backend
        name:
          type: string
          description: the name of the user
        email:
          type: string
          description: the email of the user
        password:
          type: string
          description: the password of the user
      example:
        id: 1
        name: Hsls
        email: alsuwait.ha@gmail.com
        password: 123!abc  
          
    Category:
      type: object
      required:
        - name
      properties:
        id:
          type: string
          description: the id will be auto generated in the backend
        name:
          type: string
          description: the name of the category
      example:
        id: 1
        name: Tablets


paths:
  /products:
    get:
      summary: get a list of all products
      responses:
        200:
          description: all the products are returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        500:
          description: server error
    post:
      summary: create a new product
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Product'
      responses:
        201:
          description: a new product is created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        500:
          description: server error

  /products/{productId}:
    get:
      summary: get a single product by id
      parameters:
        - in: path
          name: productId
          required: true
          schema:
            type: string
      responses:
        200:
          description: single product is returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        500:
          description: server error
    delete:
      summary: delete a single product by id
      parameters:
        - in: path
          name: productId
          required: true
          schema:
            type: string
      responses:
        200:
          description: single product is deleted
        500:
          description: server error
          
  /users:
    get:
      summary: get a list of all users
      responses:
        200:
          description: all the users are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        500:
          description: server error
          

  /categories:
    get:
      summary: get a list of all categories
      responses:
        200:
          description: all the categories are returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        500:
          description: server error


          
          